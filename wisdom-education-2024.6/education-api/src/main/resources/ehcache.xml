<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://ehcache.org/ehcache.xsd"  updateCheck="false">
  <!-- 
        配置自定义缓存
        maxElementsInMemory:设置基于内存的缓存可存放对象的最大数目
        maxElementsOnDisk:设置基于硬盘的缓存可存放对象的最大数目
        eternal：如果为true，表示对象永远不会过期，此时会忽略timeToIdleSeconds和timeToLiveSeconds属性，默认为false
        timeToIdleSeconds：设定允许对象处于空闲状态的最长时间，以秒为单位。当对象自从最近一次被访问后，
                    如果处于空闲状态的时间超过了timeToIdleSeconds属性
		值，这个对象就会过期。当对象过期，EHCache将把它从缓存中清空。只有当eternal属性为false，该属性才有效。如果该属性值为0，则表示
		对象可以无限期地处于空闲状态
        timeToLiveSeconds：设定对象允许存在于缓存中的最长时间，以秒为单位。当对象自从被存放到缓存中后，如果处于缓存中的时间超过了
        timeToLiveSeconds属性值，这个对象就会过期。当对象过期，EHCache将把它从缓存中清除。只有当eternal属性为false，
                    该属性才有效。如果该属性值为0，则表示对象可以无限期地存在于缓存中。timeToLiveSeconds必须大于timeToIdleSeconds
                    属性，才有意义
        overflowToDisk：如果为true,表示当基于内存的缓存中的对象数目达到了maxElementsInMemory界限后，会把益出        
        
        
      memoryStoreEvictionPolicy：缓存对象清除策略。有三种：

        1 、FIFO ，first in first out ，这个是大家最熟的，先进先出，不多讲了

        2 、LFU ， Less Frequently Used ，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面所讲，缓存的元素有一个hit 属性，hit 值最小的将会被清出缓存。

        3、 LRU ，Least Recently Used ，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。  
    -->

  <!--
    参数说明：
    diskStore ：指定数据存储位置，可指定磁盘中的文件夹位置
    defaultCache ： 默认的管理策略

    以下属性是必须的：
    name： Cache的名称，必须是唯一的(ehcache会把这个cache放到HashMap里)。maxElementsInMemory：在内存中缓存的element的最大数目。
    eternal：设定缓存的elements是否永远不过期。如果为true，则缓存的数据始终有效，如果为false那么还要根据timeToIdleSeconds，timeToLiveSeconds判断。
    maxElementsInMemory：cache 中最多可以存放的元素的数量。如果放入cache中的元素超过这个数值，有两种情况：
    1、若overflowToDisk的属性值为true，会将cache中多出的元素放入磁盘文件中。
    2、若overflowToDisk的属性值为false，会根据memoryStoreEvictionPolicy的策略替换cache中原有的元素。
    overflowToDisk： 如果内存中数据超过内存限制，是否要缓存到磁盘上。
    maxElementsOnDisk：在磁盘上缓存的element的最大数目，默认值为0，表示不限制。

    以下属性是可选的：
    timeToIdleSeconds： 对象空闲时间，指对象在多长时间没有被访问就会失效。只对eternal为false的有效。默认值0，表示一直可以访问。以秒为单位。
    timeToLiveSeconds： 对象存活时间，指对象从创建到失效所需要的时间。只对eternal为false的有效。默认值0，表示一直可以访问。以秒为单位。
    diskPersistent： 是否在磁盘上持久化。指重启jvm后，数据是否有效。默认为false。
    diskExpiryThreadIntervalSeconds： 对象检测线程运行时间间隔。标识对象状态的线程多长时间运行一次。以秒为单位。
    diskSpoolBufferSizeMB： DiskStore使用的磁盘大小，默认值30MB。每个cache使用各自的DiskStore。
    memoryStoreEvictionPolicy： 如果内存中数据超过内存限制，向磁盘缓存时的策略。默认值LRU，可选FIFO、LFU。
    缓存的3 种清空策略 ：
    FIFO ，first in first out (先进先出).
    LFU ， Less Frequently Used (最少使用).意思是一直以来最少被使用的。缓存的元素有一个hit 属性，hit 值最小的将会被清出缓存。
    LRU ，Least Recently Used(最近最少使用). (ehcache 默认值).缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。
  -->
    
    <!-- 指定一个文件目录，当EHCache把数据写到硬盘上时，将把数据写到这个文件目录下 -->
    <diskStore path="java.io.tmpdir"/>

    
    <!-- 设定缓存的默认数据过期策略。 -->
    <defaultCache
        maxElementsInMemory="1000"
        eternal="false"
        diskPersistent="true"
        timeToIdleSeconds="100"
        timeToLiveSeconds="100"
        overflowToDisk="true"/>

     <!-- 一分钟缓存 -->
     <cache name="one.minute"
        maxElementsInMemory="1000"
        eternal="false"
        diskPersistent="true"
        timeToIdleSeconds="10"
        timeToLiveSeconds="60"
        overflowToDisk="true"/>

    <!-- 一分钟缓存 -->
    <cache name="two.minute"
        maxElementsInMemory="1000"
        eternal="false"
        diskPersistent="false"
        timeToIdleSeconds="0"
        timeToLiveSeconds="1200"
        overflowToDisk="true"/>

    <!-- 一分钟缓存 -->
    <cache name="three.minute"
        maxElementsInMemory="1000"
        eternal="false"
        diskPersistent="false"
        timeToIdleSeconds="0"
        timeToLiveSeconds="1800"
        overflowToDisk="true"/>

    <!-- 一小时缓存 -->
    <cache name="one.hour"
        maxElementsInMemory="1000"
        eternal="false"
        diskPersistent="false"
        timeToIdleSeconds="0"
        timeToLiveSeconds="3600"
        overflowToDisk="true" />

    <cache name="user.cache"
         maxElementsInMemory="1000"
         eternal="false"
         diskPersistent="true"
         timeToIdleSeconds="0"
         timeToLiveSeconds="216000"
         overflowToDisk="true" />
</ehcache>